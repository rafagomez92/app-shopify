{"version":3,"file":"static/webpack/static\\development\\pages\\products.js.3bcaa015600d7dd05e49.hot-update.js","sources":["webpack:///./components/ResolveConflict.js"],"sourcesContent":["import { Modal, \r\n    Stack, \r\n    Thumbnail, \r\n    TextContainer, \r\n    Card, \r\n    Button, \r\n    Pagination} \r\nfrom '@shopify/polaris'\r\n\r\n\r\nimport {\r\n    MobileAcceptMajorMonotone\r\n  } from '@shopify/polaris-icons';\r\n\r\nimport { useState, useEffect } from 'react'\r\n\r\nconst ResolveConflict = ({\r\n    variants_with_conflict,\r\n    variant_in_modal,\r\n    can_solve,\r\n    modal_open,\r\n\r\n    closeModal,\r\n    stepVariant\r\n})=>{\r\n\r\n    const [hasPaginator, setHasPaginator] = useState({ hasNext: false, hasPrevious: false, price_selected: null })\r\n    \r\n    const {\r\n        id,\r\n        product_image: image_url,\r\n        product_title: title,\r\n        variant_price: price,\r\n        variant_recommended_price: recommended_price,\r\n        tax_calculated: calculated_duty = 0,\r\n        calculated_duty_original = 0,\r\n        price_selected = null\r\n    } = variant_in_modal\r\n\r\n\r\n    // Cada que variant_in_mocal cambie verificamos el estado del paginador\r\n    useEffect(() => {\r\n        const v = variants_with_conflict\r\n        let p = {hasNext: false, hasPrevious: false, price_selected}\r\n        if(v.length <= 1) return setHasPaginator(p)\r\n        const i = v.findIndex(element => element.id === id)\r\n        if(i>0) p.hasPrevious = true;\r\n        if(i<v.length-1) p.hasNext = true;\r\n        setHasPaginator(p)\r\n    },[variant_in_modal])\r\n\r\n\r\n    let pagination = null\r\n    if(variants_with_conflict.length > 0) {\r\n        pagination = (\r\n            <Pagination\r\n                hasPrevious={true}\r\n                onPrevious={() => {\r\n                    console.log('Previous')\r\n                    move(-1)\r\n                }}\r\n                hastNext={true}\r\n                onNext={() => {\r\n                    console.log('Next')\r\n                    move(1)\r\n                }}\r\n            />\r\n        )\r\n    }\r\n\r\n    const handleSubmit = () => {\r\n\r\n    }    \r\n    \r\n    const handleClose = () => {\r\n        closeModal()\r\n    }\r\n\r\n    const handleSelectPrice = (price_selected) => {\r\n        setHasPaginator({ ...hasPaginator, price_selected })\r\n        move(0, price_selected)\r\n\r\n    }\r\n\r\n    const move = (step, price_selected) => {\r\n        if(price_selected === undefined) price_selected = hasPaginator.price_selected\r\n        const v = variants_with_conflict\r\n        const i = v.findIndex(e => e.id === id)\r\n        if(i>=0 && i<v.length){\r\n            stepVariant(price_selected, i)\r\n        }\r\n    }\r\n\r\n    const footer = (\r\n        <Stack>\r\n            <Stack.Item fill>\r\n                {pagination}\r\n            </Stack.Item>\r\n            \r\n            <Stack.Item>\r\n                <Button primary onClick={handleSubmit} disabled={ !can_solve }>Guarda mi selección</Button>\r\n            </Stack.Item>\r\n        </Stack>\r\n    )\r\n    \r\n\r\n    return (\r\n        <Modal\r\n        large\r\n        open={modal_open}\r\n        onClose={handleClose}\r\n        title={`Resolver conflicto`}\r\n        footer={footer}\r\n        >\r\n            <Modal.Section>\r\n\r\n            <TextContainer>\r\n                <div>Nuestros expertos sugieren diferentes impuestos de los que usted ha indicado. Seleccione cual es el correcto</div>\r\n                <Stack distribution=\"fillEvenly\">\r\n                    <Stack.Item>\r\n                        <Stack>\r\n                            <Thumbnail \r\n                            source={image_url}\r\n                            />\r\n                            <div>{title}</div>\r\n                        </Stack>                        \r\n                    </Stack.Item>\r\n                    <Stack.Item>\r\n                        <div>Regular price: ${price}</div>\r\n                        <div>Impuestos: selecciona a continuación</div>\r\n                    </Stack.Item>\r\n                </Stack>\r\n                <Stack distribution=\"fillEvenly\">\r\n                    <Card sectioned>\r\n                        <div className=\"title-wrapper\">\r\n                            <div className=\"subtitle\">Tu ingresaste</div>\r\n                        </div>\r\n                        <div className=\"title-price\">${price}</div>\r\n                        <p className=\"text-center\">Impuesto ${calculated_duty_original}</p>\r\n                        <div className=\"text-center mt-10\">\r\n                            <Button \r\n                                onClick={() => handleSelectPrice('original')}\r\n                                primary={hasPaginator.price_selected==='original'}                        \r\n                                icon={ hasPaginator.price_selected==='original' && MobileAcceptMajorMonotone}                        \r\n                            >\r\n                                Seleccionar\r\n                            </Button>\r\n                        </div>\r\n                    </Card>\r\n                    <Card sectioned>\r\n                        <div className=\"title-wrapper\">\r\n                            <div className=\"subtitle\">Nosotros recomendamos</div>\r\n                        </div>\r\n                        <div className=\"title-price\">${recommended_price}</div>\r\n                        <p className=\"text-center\">Impuesto ${calculated_duty}</p>\r\n                        <div className=\"text-center mt-10\">\r\n                            <Button \r\n                                onClick={() => handleSelectPrice('recommended')}\r\n                                primary={hasPaginator.price_selected==='recommended'}                        \r\n                                icon={ hasPaginator.price_selected==='recommended' && MobileAcceptMajorMonotone}\r\n                            >\r\n                                Seleccionar\r\n                            </Button>\r\n                        </div>\r\n                    </Card>                \r\n                </Stack>\r\n            </TextContainer>\r\n            </Modal.Section>\r\n            \r\n        </Modal>\r\n    )\r\n\r\n}\r\n\r\nexport default ResolveConflict"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAUA;AAIA;AACA;AACA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAEA;AAAA;AAAA;AAAA;AAFA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAgBA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAGA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAaA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAKA;AAAA;AAAA;AAAA;AACA;AAKA;AAEA;AACA;AACA;AACA;AACA;AALA;AAWA;AAAA;AAIA;AADA;AAWA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AACA;AACA;AAHA;AASA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AACA;AACA;AAHA;AAgBA;AACA;AACA;;;;A","sourceRoot":""}