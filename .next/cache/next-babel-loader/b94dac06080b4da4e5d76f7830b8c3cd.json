{"ast":null,"code":"//acciones con axios async\n//usamos thunk\nimport axios from 'axios';\nimport Creators from './actions';\nimport VariantCreators from '../variant/actions'; // A ===================\n//funciones que uso internamente en este archivo\n//pero que el componente no necesita ejecutar\n\nconst _saveShopifyData = Creators.saveShopifyData;\nconst _shopExists = Creators.shopExists;\nconst _shopNotExists = Creators.shopNotExists;\nconst _isLoading = Creators.isLoading;\nconst _isNotLoading = Creators.isNotLoading;\nconst _setError = Creators.setError;\nconst clearError = Creators.clearError; // B ===================\n//fuciones que se conectan con apis\n//async usan thunk\n\nconst getShopifyData = () => {\n  return dispatch => {\n    const instanceShopify = axios.create({\n      baseURL: '/api',\n      timeout: 5000\n    });\n    return instanceShopify.get(`/shopify`).then(response => {\n      const {\n        shop\n      } = response.data;\n      dispatch(_saveShopifyData(shop));\n      const {\n        id\n      } = shop;\n      axios.get(`/store/${id}`).then(response => {\n        dispatch(_shopExists(response.data));\n      }, error => {\n        dispatch(_shopNotExists());\n      });\n    }, error => {});\n  };\n};\n\nconst createShop = payload => {\n  return dispatch => {\n    dispatch(_isLoading());\n    axios.post('/store', payload).then(response => {\n      dispatch(_shopExists(response.data));\n    }, err => {\n      dispatch(_shopNotExists());\n\n      switch (err.response.status) {\n        case 400:\n          dispatch(_setError('Error de validacion, verifique sus datos'));\n          break;\n\n        default:\n          dispatch(_setError('Error de servidor'));\n      }\n    });\n  };\n}; // C ===================\n//exportar las funciones que finalmente se van a comunicar\n//con los componentes reales es decir tienen comunicacion\n//con el exterior\n\n\nexport default {\n  getShopifyData,\n  createShop,\n  clearError\n};","map":{"version":3,"sources":["C:/Users/rafae/Desktop/Bootcamp/Front-Back/app_shopify/store/shopifystore/operations.js"],"names":["axios","Creators","VariantCreators","_saveShopifyData","saveShopifyData","_shopExists","shopExists","_shopNotExists","shopNotExists","_isLoading","isLoading","_isNotLoading","isNotLoading","_setError","setError","clearError","getShopifyData","dispatch","instanceShopify","create","baseURL","timeout","get","then","response","shop","data","id","error","createShop","payload","post","err","status"],"mappings":"AAAA;AACA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,eAAP,MAA4B,oBAA5B,C,CAGA;AACA;AACA;;AACA,MAAMC,gBAAgB,GAAIF,QAAQ,CAACG,eAAnC;AACA,MAAMC,WAAW,GAASJ,QAAQ,CAACK,UAAnC;AACA,MAAMC,cAAc,GAAMN,QAAQ,CAACO,aAAnC;AACA,MAAMC,UAAU,GAAUR,QAAQ,CAACS,SAAnC;AACA,MAAMC,aAAa,GAAOV,QAAQ,CAACW,YAAnC;AACA,MAAMC,SAAS,GAAWZ,QAAQ,CAACa,QAAnC;AACA,MAAMC,UAAU,GAAUd,QAAQ,CAACc,UAAnC,C,CAKA;AACA;AACA;;AACA,MAAMC,cAAc,GAAG,MAAM;AAEzB,SAAQC,QAAD,IAAc;AAEjB,UAAMC,eAAe,GAAGlB,KAAK,CAACmB,MAAN,CAAa;AACjCC,MAAAA,OAAO,EAAE,MADwB;AAEjCC,MAAAA,OAAO,EAAE;AAFwB,KAAb,CAAxB;AAKA,WAAOH,eAAe,CAACI,GAAhB,CAAqB,UAArB,EACFC,IADE,CACIC,QAAQ,IAAG;AAGd,YAAM;AAAEC,QAAAA;AAAF,UAAWD,QAAQ,CAACE,IAA1B;AACAT,MAAAA,QAAQ,CAACd,gBAAgB,CAACsB,IAAD,CAAjB,CAAR;AAEA,YAAM;AAAEE,QAAAA;AAAF,UAASF,IAAf;AACAzB,MAAAA,KAAK,CAACsB,GAAN,CAAW,UAASK,EAAG,EAAvB,EACKJ,IADL,CACYC,QAAQ,IAAG;AAEfP,QAAAA,QAAQ,CAACZ,WAAW,CAACmB,QAAQ,CAACE,IAAV,CAAZ,CAAR;AAEH,OALL,EAKOE,KAAK,IAAE;AAENX,QAAAA,QAAQ,CAACV,cAAc,EAAf,CAAR;AAEH,OATL;AAYH,KApBE,EAoBAqB,KAAK,IAAE,CAET,CAtBE,CAAP;AAuBH,GA9BD;AAgCH,CAlCD;;AAsCA,MAAMC,UAAU,GAAIC,OAAD,IAAW;AAE1B,SAAQb,QAAD,IAAc;AACjBA,IAAAA,QAAQ,CAACR,UAAU,EAAX,CAAR;AAEAT,IAAAA,KAAK,CAAC+B,IAAN,CAAW,QAAX,EAAoBD,OAApB,EACKP,IADL,CACUC,QAAQ,IAAE;AACZP,MAAAA,QAAQ,CAACZ,WAAW,CAACmB,QAAQ,CAACE,IAAV,CAAZ,CAAR;AAEH,KAJL,EAIMM,GAAG,IAAE;AACHf,MAAAA,QAAQ,CAACV,cAAc,EAAf,CAAR;;AAEA,cAAOyB,GAAG,CAACR,QAAJ,CAAaS,MAApB;AACI,aAAK,GAAL;AACIhB,UAAAA,QAAQ,CAACJ,SAAS,CAAC,0CAAD,CAAV,CAAR;AACA;;AACJ;AACII,UAAAA,QAAQ,CAACJ,SAAS,CAAC,mBAAD,CAAV,CAAR;AALR;AAOH,KAdL;AAeH,GAlBD;AAmBH,CArBD,C,CA0BA;AACA;AACA;AACA;;;AACA,eAAe;AACXG,EAAAA,cADW;AAEXa,EAAAA,UAFW;AAGXd,EAAAA;AAHW,CAAf","sourcesContent":["//acciones con axios async\r\n//usamos thunk\r\n\r\nimport axios from 'axios'\r\nimport Creators from './actions'\r\nimport VariantCreators from '../variant/actions'\r\n\r\n\r\n// A ===================\r\n//funciones que uso internamente en este archivo\r\n//pero que el componente no necesita ejecutar\r\nconst _saveShopifyData  = Creators.saveShopifyData\r\nconst _shopExists       = Creators.shopExists\r\nconst _shopNotExists    = Creators.shopNotExists\r\nconst _isLoading        = Creators.isLoading\r\nconst _isNotLoading     = Creators.isNotLoading\r\nconst _setError         = Creators.setError\r\nconst clearError        = Creators.clearError\r\n\r\n\r\n\r\n\r\n// B ===================\r\n//fuciones que se conectan con apis\r\n//async usan thunk\r\nconst getShopifyData = () => {\r\n\r\n    return (dispatch) => {\r\n\r\n        const instanceShopify = axios.create({\r\n            baseURL: '/api',\r\n            timeout: 5000\r\n        })\r\n\r\n        return instanceShopify.get(`/shopify`)\r\n            .then( response =>{\r\n\r\n\r\n                const { shop } = response.data\r\n                dispatch(_saveShopifyData(shop))                \r\n\r\n                const { id } = shop\r\n                axios.get(`/store/${id}`)\r\n                    .then ( response =>{\r\n\r\n                        dispatch(_shopExists(response.data))\r\n\r\n                    }, error=>{\r\n\r\n                        dispatch(_shopNotExists())\r\n\r\n                    })\r\n\r\n\r\n            }, error=>{\r\n\r\n            })\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nconst createShop = (payload)=>{\r\n\r\n    return (dispatch) => {\r\n        dispatch(_isLoading())\r\n\r\n        axios.post('/store',payload)\r\n            .then(response=>{\r\n                dispatch(_shopExists(response.data))\r\n\r\n            },err=>{\r\n                dispatch(_shopNotExists())\r\n\r\n                switch(err.response.status){\r\n                    case 400:\r\n                        dispatch(_setError('Error de validacion, verifique sus datos'))\r\n                        break;\r\n                    default:\r\n                        dispatch(_setError('Error de servidor'))                        \r\n                }\r\n            })\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n// C ===================\r\n//exportar las funciones que finalmente se van a comunicar\r\n//con los componentes reales es decir tienen comunicacion\r\n//con el exterior\r\nexport default {\r\n    getShopifyData,\r\n    createShop,\r\n    clearError\r\n}"]},"metadata":{},"sourceType":"module"}