{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport App from 'next/app';\nimport Head from 'next/head';\nimport { AppProvider } from '@shopify/polaris';\nimport { Provider } from '@shopify/app-bridge-react';\nimport '@shopify/polaris/styles.css';\nimport translations from '@shopify/polaris/locales/en.json';\nimport Cookies from 'js-cookie';\nimport axios from 'axios';\naxios.defaults.baseURL = API_URL; // importo utilerías de redux\n\nimport thunk from 'redux-thunk';\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider as ReduxProvider } from 'react-redux';\nimport withRedux from 'next-redux-wrapper';\nimport reducer from '../store';\nimport { composeWithDevTools } from 'redux-devtools-extension'; // construyo el store\n\nconst middlewares = [thunk];\n\nconst makeStore = (initialState, options) => {\n  return createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middlewares)));\n};\n\nclass MyApp extends App {\n  render() {\n    const {\n      Component,\n      pageProps,\n      store\n    } = this.props;\n    const config = {\n      apiKey: API_KEY,\n      shopOrigin: Cookies.get('shopOrigin'),\n      forceRedirect: true\n    };\n    return __jsx(React.Fragment, null, __jsx(Head, null, __jsx(\"title\", null, \"Shopify App\"), __jsx(\"meta\", {\n      charSet: \"utf-8\"\n    })), __jsx(Provider, {\n      config: config\n    }, __jsx(ReduxProvider, {\n      store: store\n    }, __jsx(AppProvider, {\n      i18n: translations\n    }, __jsx(Component, pageProps)))));\n  }\n\n}\n\nexport default withRedux(makeStore)(MyApp);","map":{"version":3,"sources":["C:/Users/rafae/Desktop/Bootcamp/Front-Back/app_shopify/pages/_app.js"],"names":["App","Head","AppProvider","Provider","translations","Cookies","axios","defaults","baseURL","API_URL","thunk","createStore","applyMiddleware","ReduxProvider","withRedux","reducer","composeWithDevTools","middlewares","makeStore","initialState","options","MyApp","render","Component","pageProps","store","props","config","apiKey","API_KEY","shopOrigin","get","forceRedirect"],"mappings":";;AAAA,OAAOA,GAAP,MAAgB,UAAhB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,QAAT,QAAyB,2BAAzB;AACA,OAAO,6BAAP;AACA,OAAOC,YAAP,MAAyB,kCAAzB;AACA,OAAOC,OAAP,MAAoB,WAApB;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AACAA,KAAK,CAACC,QAAN,CAAeC,OAAf,GAAyBC,OAAzB,C,CAEA;;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,SAAST,QAAQ,IAAIU,aAArB,QAAyC,aAAzC;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,OAAOC,OAAP,MAAoB,UAApB;AACA,SAASC,mBAAT,QAAoC,0BAApC,C,CAEA;;AACA,MAAMC,WAAW,GAAG,CAACP,KAAD,CAApB;;AACA,MAAMQ,SAAS,GAAG,CAACC,YAAD,EAAeC,OAAf,KAA0B;AACxC,SAAOT,WAAW,CACdI,OADc,EAEdI,YAFc,EAGdH,mBAAmB,CAACJ,eAAe,CAAC,GAAGK,WAAJ,CAAhB,CAHL,CAAlB;AAKH,CAND;;AAQA,MAAMI,KAAN,SAAoBrB,GAApB,CAAwB;AAEpBsB,EAAAA,MAAM,GAAE;AACJ,UAAM;AAAEC,MAAAA,SAAF;AAAaC,MAAAA,SAAb;AAAwBC,MAAAA;AAAxB,QAAkC,KAAKC,KAA7C;AACA,UAAMC,MAAM,GAAG;AACXC,MAAAA,MAAM,EAAEC,OADG;AAEXC,MAAAA,UAAU,EAAEzB,OAAO,CAAC0B,GAAR,CAAY,YAAZ,CAFD;AAGXC,MAAAA,aAAa,EAAE;AAHJ,KAAf;AAKA,WACI,MAAC,KAAD,CAAO,QAAP,QACI,MAAC,IAAD,QACI,mCADJ,EAEI;AAAM,MAAA,OAAO,EAAC;AAAd,MAFJ,CADJ,EAMI,MAAC,QAAD;AAAU,MAAA,MAAM,EAAEL;AAAlB,OACI,MAAC,aAAD;AAAe,MAAA,KAAK,EAAEF;AAAtB,OACI,MAAC,WAAD;AAAa,MAAA,IAAI,EAAErB;AAAnB,OACI,MAAC,SAAD,EAAeoB,SAAf,CADJ,CADJ,CADJ,CANJ,CADJ;AAkBH;;AA3BmB;;AAgCxB,eAAeV,SAAS,CAACI,SAAD,CAAT,CAAqBG,KAArB,CAAf","sourcesContent":["import App from 'next/app'\r\nimport Head from 'next/head'\r\nimport { AppProvider } from '@shopify/polaris'\r\nimport { Provider } from '@shopify/app-bridge-react'\r\nimport '@shopify/polaris/styles.css'\r\nimport translations from '@shopify/polaris/locales/en.json'\r\nimport Cookies from 'js-cookie'\r\n\r\nimport axios from 'axios';\r\naxios.defaults.baseURL = API_URL\r\n\r\n// importo utilerías de redux\r\nimport thunk from 'redux-thunk'\r\nimport { createStore, applyMiddleware } from 'redux'\r\nimport { Provider as ReduxProvider} from 'react-redux'\r\nimport withRedux from 'next-redux-wrapper'\r\nimport reducer from '../store'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\n\r\n// construyo el store\r\nconst middlewares = [thunk]\r\nconst makeStore = (initialState, options) =>{\r\n    return createStore(\r\n        reducer,\r\n        initialState,\r\n        composeWithDevTools(applyMiddleware(...middlewares))\r\n    )\r\n}\r\n\r\nclass MyApp extends App {\r\n\r\n    render(){\r\n        const { Component, pageProps, store } = this.props;\r\n        const config = { \r\n            apiKey: API_KEY, \r\n            shopOrigin: Cookies.get('shopOrigin'), \r\n            forceRedirect: true\r\n        }\r\n        return (\r\n            <React.Fragment>\r\n                <Head>\r\n                    <title>Shopify App</title>\r\n                    <meta charSet=\"utf-8\" />\r\n                </Head>\r\n\r\n                <Provider config={config}>\r\n                    <ReduxProvider store={store}>\r\n                        <AppProvider i18n={translations}>\r\n                            <Component {...pageProps} />\r\n                        </AppProvider>\r\n                    </ReduxProvider>\r\n                </Provider>\r\n                            \r\n            </React.Fragment>\r\n        )\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default withRedux(makeStore)(MyApp)"]},"metadata":{},"sourceType":"module"}