{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport types from './types';\nvar INITAL_STATE = {\n  variant_is_loading: true,\n  variants: [],\n  variants_with_conflict: [],\n  variant_in_modal: {},\n  can_solve: false,\n  modal_open: false\n};\n\nvar variantReducer = function variantReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INITAL_STATE;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case types.SET_VARIANTS:\n      {\n        var variants = action.variants;\n        return _objectSpread({}, state, {\n          variants: variants,\n          variant_is_loading: false,\n          variants_with_conflict: variants.filter(function (element) {\n            return element.status === 'Conflicto';\n          }).map(function (element) {\n            return _objectSpread({}, element, {\n              price_selected: null\n            });\n          })\n        });\n      }\n\n    case types.SOLVE_VARIANT:\n      {\n        var id = action.id;\n        var index = state.variants_with_conflict.findIndex(function (element) {\n          return element.id === id;\n        }); //const variant_in_modal = { ...state.variants_with_conflict[index] }\n\n        var variant_in_modal = JSON.parse(JSON.stringify(state.variants_with_conflict[index]));\n        return _objectSpread({}, state, {\n          variant_in_modal: variant_in_modal,\n          modal_open: true\n        });\n      }\n\n    case types.CLOSE_MODAL:\n      {\n        return _objectSpread({}, state, {\n          variant_in_modal: {},\n          modal_open: false\n        });\n      }\n\n    case types.STEP_VARIANT:\n      {\n        var selected = action.selected;\n        var currentIndex = state.variants_with_conflict.findIndex(function (element) {\n          return element.id === state.variant_in_modal.id;\n        });\n\n        var variant = _objectSpread({}, state.variants_in_modal, {\n          price_selected: selected\n        });\n\n        var newVariants = JSON.parse(JSON.stringify(state.variants_with_conflict));\n        newVariants[currentIndex] = variant;\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default variantReducer;","map":{"version":3,"sources":["C:/Users/rafae/Desktop/Bootcamp/Front-Back/app_shopify/store/variant/reducers.js"],"names":["types","INITAL_STATE","variant_is_loading","variants","variants_with_conflict","variant_in_modal","can_solve","modal_open","variantReducer","state","action","type","SET_VARIANTS","filter","element","status","map","price_selected","SOLVE_VARIANT","id","index","findIndex","JSON","parse","stringify","CLOSE_MODAL","STEP_VARIANT","selected","currentIndex","variant","variants_in_modal","newVariants"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,SAAlB;AAEA,IAAMC,YAAY,GAAG;AACjBC,EAAAA,kBAAkB,EAAE,IADH;AAEjBC,EAAAA,QAAQ,EAAE,EAFO;AAIjBC,EAAAA,sBAAsB,EAAE,EAJP;AAKjBC,EAAAA,gBAAgB,EAAE,EALD;AAMjBC,EAAAA,SAAS,EAAE,KANM;AAOjBC,EAAAA,UAAU,EAAE;AAPK,CAArB;;AAaA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAgC;AAAA,MAA9BC,KAA8B,uEAAxBR,YAAwB;AAAA,MAAVS,MAAU;;AAEnD,UAAOA,MAAM,CAACC,IAAd;AAEI,SAAKX,KAAK,CAACY,YAAX;AAAyB;AAAA,YAEbT,QAFa,GAEAO,MAFA,CAEbP,QAFa;AAGrB,iCACOM,KADP;AAEIN,UAAAA,QAAQ,EAARA,QAFJ;AAGID,UAAAA,kBAAkB,EAAE,KAHxB;AAIIE,UAAAA,sBAAsB,EAAED,QAAQ,CAACU,MAAT,CAAiB,UAAAC,OAAO;AAAA,mBAAIA,OAAO,CAACC,MAAR,KAAiB,WAArB;AAAA,WAAxB,EAA0DC,GAA1D,CAA8D,UAAAF,OAAO,EAAI;AAAE,qCAAYA,OAAZ;AAAqBG,cAAAA,cAAc,EAAE;AAArC;AAA6C,WAAxH;AAJ5B;AAMH;;AAGD,SAAKjB,KAAK,CAACkB,aAAX;AAA0B;AAAA,YAEdC,EAFc,GAEPT,MAFO,CAEdS,EAFc;AAGtB,YAAMC,KAAK,GAAGX,KAAK,CAACL,sBAAN,CAA6BiB,SAA7B,CAAwC,UAAAP,OAAO;AAAA,iBAAIA,OAAO,CAACK,EAAR,KAAcA,EAAlB;AAAA,SAA/C,CAAd,CAHsB,CAItB;;AACA,YAAMd,gBAAgB,GAAGiB,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAef,KAAK,CAACL,sBAAN,CAA6BgB,KAA7B,CAAf,CAAX,CAAzB;AAEA,iCACOX,KADP;AAEIJ,UAAAA,gBAAgB,EAAhBA,gBAFJ;AAGIE,UAAAA,UAAU,EAAE;AAHhB;AAMH;;AAED,SAAKP,KAAK,CAACyB,WAAX;AAAwB;AACpB,iCACOhB,KADP;AAEIJ,UAAAA,gBAAgB,EAAE,EAFtB;AAGIE,UAAAA,UAAU,EAAE;AAHhB;AAKH;;AAED,SAAKP,KAAK,CAAC0B,YAAX;AAAyB;AAAA,YAEbC,QAFa,GAEAjB,MAFA,CAEbiB,QAFa;AAGrB,YAAMC,YAAY,GAAGnB,KAAK,CAACL,sBAAN,CAA6BiB,SAA7B,CAAwC,UAAAP,OAAO;AAAA,iBAAIA,OAAO,CAACK,EAAR,KAAeV,KAAK,CAACJ,gBAAN,CAAuBc,EAA1C;AAAA,SAA/C,CAArB;;AACA,YAAMU,OAAO,qBAAQpB,KAAK,CAACqB,iBAAd;AAAiCb,UAAAA,cAAc,EAAEU;AAAjD,UAAb;;AAEA,YAAII,WAAW,GAAGT,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAef,KAAK,CAACL,sBAArB,CAAX,CAAlB;AACA2B,QAAAA,WAAW,CAACH,YAAD,CAAX,GAA4BC,OAA5B;AACH;;AAGD;AAAS,aAAOpB,KAAP;AAhDb;AAoDH,CAtDD;;AAyDA,eAAeD,cAAf","sourcesContent":["import types from './types'\r\n\r\nconst INITAL_STATE = {\r\n    variant_is_loading: true,\r\n    variants: [],\r\n\r\n    variants_with_conflict: [],\r\n    variant_in_modal: {},\r\n    can_solve: false,\r\n    modal_open: false\r\n\r\n    \r\n}\r\n\r\n\r\nconst variantReducer = ( state=INITAL_STATE, action )=>{\r\n\r\n    switch(action.type){\r\n\r\n        case types.SET_VARIANTS: {\r\n            \r\n            const { variants } = action        \r\n            return {\r\n                ...state,\r\n                variants,\r\n                variant_is_loading: false,\r\n                variants_with_conflict: variants.filter( element => element.status==='Conflicto').map(element => { return { ...element, price_selected: null } })\r\n            }\r\n        }\r\n\r\n\r\n        case types.SOLVE_VARIANT: {\r\n\r\n            const { id } = action\r\n            const index = state.variants_with_conflict.findIndex( element => element.id=== id)\r\n            //const variant_in_modal = { ...state.variants_with_conflict[index] }\r\n            const variant_in_modal = JSON.parse(JSON.stringify(state.variants_with_conflict[index]))\r\n\r\n            return {\r\n                ...state,\r\n                variant_in_modal,\r\n                modal_open: true\r\n            }\r\n            \r\n        }\r\n        \r\n        case types.CLOSE_MODAL: {\r\n            return {\r\n                ...state,\r\n                variant_in_modal: {},\r\n                modal_open: false\r\n            }\r\n        }\r\n\r\n        case types.STEP_VARIANT: {\r\n\r\n            const { selected } = action\r\n            const currentIndex = state.variants_with_conflict.findIndex( element => element.id === state.variant_in_modal.id)            \r\n            const variant = { ...state.variants_in_modal, price_selected: selected }\r\n\r\n            let newVariants = JSON.parse(JSON.stringify(state.variants_with_conflict))\r\n            newVariants[currentIndex] = variant\r\n        }\r\n        \r\n\r\n        default: return state;\r\n    }\r\n    \r\n\r\n}\r\n\r\n\r\nexport default variantReducer;"]},"metadata":{},"sourceType":"module"}