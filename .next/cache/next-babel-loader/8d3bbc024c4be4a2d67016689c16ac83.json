{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport App from 'next/app';\nimport Head from 'next/head';\nimport { AppProvider } from '@shopify/polaris';\nimport { Provider } from '@shopify/app-bridge-react';\nimport '@shopify/polaris/styles.css';\nimport translations from '@shopify/polaris/locales/en.json';\nimport Cookies from 'js-cookie';\nimport axios from 'axios';\naxios.defaults.baseURL = API_URL; // Importo utilerias de redux\n\nimport thunk from 'redux-thunk';\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider as ReduxProvider } from 'react-redux';\nimport withRedux from 'next-redux-wrapper';\nimport reducer from '../store';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport './general.css'; //Construyo el store con middlewares\n\nvar middlewares = [thunk];\n\nvar makeStore = function makeStore(initalState, options) {\n  return createStore(reducer, initalState, composeWithDevTools(applyMiddleware.apply(void 0, middlewares)));\n};\n\nvar MyApp = /*#__PURE__*/function (_App) {\n  _inherits(MyApp, _App);\n\n  var _super = _createSuper(MyApp);\n\n  function MyApp() {\n    _classCallCheck(this, MyApp);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(MyApp, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          Component = _this$props.Component,\n          pageProps = _this$props.pageProps,\n          store = _this$props.store;\n      var config = {\n        apiKey: API_KEY,\n        shopOrigin: Cookies.get('shopOrigin'),\n        forceRedirect: true\n      };\n      return __jsx(React.Fragment, null, __jsx(Head, null, __jsx(\"title\", null, \"Fernando App\"), __jsx(\"meta\", {\n        charSet: \"utf-8\"\n      })), __jsx(Provider, {\n        config: config\n      }, __jsx(ReduxProvider, {\n        store: store\n      }, __jsx(AppProvider, {\n        i18n: translations\n      }, __jsx(Component, pageProps)))));\n    }\n  }]);\n\n  return MyApp;\n}(App);\n\nexport default withRedux(makeStore)(MyApp);","map":{"version":3,"sources":["C:/Users/rafae/Desktop/Bootcamp/Front-Back/app_shopify/pages/_app.js"],"names":["App","Head","AppProvider","Provider","translations","Cookies","axios","defaults","baseURL","API_URL","thunk","createStore","applyMiddleware","ReduxProvider","withRedux","reducer","composeWithDevTools","middlewares","makeStore","initalState","options","MyApp","props","Component","pageProps","store","config","apiKey","API_KEY","shopOrigin","get","forceRedirect"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,GAAP,MAAgB,UAAhB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,QAAT,QAAyB,2BAAzB;AACA,OAAO,6BAAP;AACA,OAAOC,YAAP,MAAyB,kCAAzB;AACA,OAAOC,OAAP,MAAoB,WAApB;AAIA,OAAOC,KAAP,MAAkB,OAAlB;AACAA,KAAK,CAACC,QAAN,CAAeC,OAAf,GAAyBC,OAAzB,C,CAGA;;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,SAAST,QAAQ,IAAIU,aAArB,QAAyC,aAAzC;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,OAAOC,OAAP,MAAoB,UAApB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AAEA,OAAO,eAAP,C,CAEA;;AACA,IAAMC,WAAW,GAAG,CAACP,KAAD,CAApB;;AACA,IAAMQ,SAAS,GAAG,SAAZA,SAAY,CAACC,WAAD,EAAcC,OAAd,EAAwB;AACtC,SAAOT,WAAW,CACdI,OADc,EAEdI,WAFc,EAGdH,mBAAmB,CAACJ,eAAe,MAAf,SAAmBK,WAAnB,CAAD,CAHL,CAAlB;AAKH,CAND;;IASMI,K;;;;;;;;;;;;;6BAEM;AAAA,wBACoC,KAAKC,KADzC;AAAA,UACIC,SADJ,eACIA,SADJ;AAAA,UACeC,SADf,eACeA,SADf;AAAA,UAC0BC,KAD1B,eAC0BA,KAD1B;AAEJ,UAAMC,MAAM,GAAG;AACXC,QAAAA,MAAM,EAAEC,OADG;AAEXC,QAAAA,UAAU,EAAExB,OAAO,CAACyB,GAAR,CAAY,YAAZ,CAFD;AAGXC,QAAAA,aAAa,EAAE;AAHJ,OAAf;AAKA,aACI,MAAC,KAAD,CAAO,QAAP,QACI,MAAC,IAAD,QACI,oCADJ,EAEI;AAAM,QAAA,OAAO,EAAC;AAAd,QAFJ,CADJ,EAMI,MAAC,QAAD;AAAU,QAAA,MAAM,EAAEL;AAAlB,SACI,MAAC,aAAD;AAAe,QAAA,KAAK,EAAED;AAAtB,SACI,MAAC,WAAD;AAAa,QAAA,IAAI,EAAErB;AAAnB,SACI,MAAC,SAAD,EAAeoB,SAAf,CADJ,CADJ,CADJ,CANJ,CADJ;AAkBH;;;;EA3BexB,G;;AAgCpB,eAAec,SAAS,CAACI,SAAD,CAAT,CAAqBG,KAArB,CAAf","sourcesContent":["import App from 'next/app'\r\nimport Head from 'next/head'\r\nimport { AppProvider } from '@shopify/polaris'\r\nimport { Provider } from '@shopify/app-bridge-react'\r\nimport '@shopify/polaris/styles.css'\r\nimport translations from '@shopify/polaris/locales/en.json'\r\nimport Cookies from 'js-cookie'\r\n\r\n\r\n\r\nimport axios from 'axios'\r\naxios.defaults.baseURL = API_URL\r\n\r\n\r\n// Importo utilerias de redux\r\nimport thunk from 'redux-thunk'\r\nimport { createStore, applyMiddleware } from 'redux'\r\nimport { Provider as ReduxProvider} from 'react-redux'\r\nimport withRedux from 'next-redux-wrapper'\r\nimport reducer from '../store'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\n\r\nimport './general.css'\r\n\r\n//Construyo el store con middlewares\r\nconst middlewares = [thunk]\r\nconst makeStore = (initalState, options)=>{\r\n    return createStore(\r\n        reducer,\r\n        initalState,\r\n        composeWithDevTools(applyMiddleware(...middlewares))\r\n    )\r\n}\r\n\r\n\r\nclass MyApp extends App {\r\n\r\n    render(){\r\n        const { Component, pageProps, store } = this.props;\r\n        const config = { \r\n            apiKey: API_KEY, \r\n            shopOrigin: Cookies.get('shopOrigin'), \r\n            forceRedirect: true\r\n        }\r\n        return (\r\n            <React.Fragment>\r\n                <Head>\r\n                    <title>Fernando App</title>\r\n                    <meta charSet=\"utf-8\" />\r\n                </Head>\r\n\r\n                <Provider config={config}>\r\n                    <ReduxProvider store={store}>\r\n                        <AppProvider i18n={translations}>\r\n                            <Component {...pageProps} />\r\n                        </AppProvider>\r\n                    </ReduxProvider>\r\n                </Provider>\r\n                            \r\n            </React.Fragment>\r\n        )\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default withRedux(makeStore)(MyApp)"]},"metadata":{},"sourceType":"module"}